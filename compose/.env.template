# Default environment variables and settings
# They can be overridden by setting them in the environment of the system (or on the same command line when invoking docker-compose)
# Use 'docker-compose config' to print the current configuration
# https://docs.docker.com/compose/environment-variables/env-file/#interpolation

# [Required] Base builder image tag
BUILDER_BASE_TAG=ubuntu_22.04

# [Required] Build folder (inside the persistent volume)
# BUILD_FOLDER=projectName

# [Required] Application name to start with the 'run' service (inside the container)
# APP=Tests

# [Required] Mount point for the persistent volume (read-only)
MOUNT_POINT=${PWD}/..

# [Optional] If the application is a Qt application, define the Qt version
# QT_VERSION=6.5.2

################# DO NOT MODIFY BELOW THIS LINE #################
# TO BE MOVED TO .env.computed WHEN https://github.com/docker/compose/issues/11870 IS RESOLVED

# Docker base folder
DOCKER_BASE_FOLDER=${PWD}

# Builder image tag whether Qt is used or not
BUILDER_TAG=${BUILDER_BASE_TAG:?No value specified}${QT_VERSION:+-qt_${QT_VERSION:-}}

# [macOS] Unix sockets are not supported by Docker for Mac, so we need to use a different location
# Attempt to automatically detect macOS using the SECURITYSESSIONID environment variable that is defined by iTerm2 and Alacritty
# If this doesn't work, create an .env.override file with the following content and pass it with the --env-file option to docker compose:
# SSH_AUTH_SOCK_LOCATION=/run/host-services/ssh-auth.sock
SSH_AUTH_SOCK_LOCATION=${SECURITYSESSIONID:+/run/host-services/ssh-auth.sock}

SSH_AUTH_SOCK_LOCATION=${SSH_AUTH_SOCK_LOCATION:-${SSH_AUTH_SOCK}}

